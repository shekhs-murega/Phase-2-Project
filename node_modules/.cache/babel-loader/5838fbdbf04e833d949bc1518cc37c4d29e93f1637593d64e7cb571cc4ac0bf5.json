{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './Data.css';\nfunction Data() {\n  _s();\n  const [breeds, setBreeds] = useState([]);\n  const [selectedBreed, setSelectedBreed] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    // Setup the Controls\n    var $breed_select = $('select.breed_select');\n    $breed_select.change(function () {\n      var id = $(this).children(\":selected\").attr(\"id\");\n      getDogByBreed(id);\n    });\n\n    // Load all the Breeds\n    function getBreeds() {\n      ajax_get('https://api.thedogapi.com/v1/breeds', function (data) {\n        populateBreedsSelect(data);\n      });\n    }\n\n    // Put the breeds in the Select control\n    function populateBreedsSelect(breeds) {\n      $breed_select.empty().append(function () {\n        var output = '';\n        $.each(breeds, function (key, value) {\n          output += '<option id=\"' + value.id + '\">' + value.name + '</option>';\n        });\n        return output;\n      });\n    }\n\n    // triggered when the breed select control changes\n    function getDogByBreed(breed_id) {\n      ajax_get('https://api.thedogapi.com/v1/images/search?include_breed=1&breed_id=' + breed_id, function (data) {\n        if (data.length === 0) {\n          // if there are no images returned\n          clearBreed();\n          $(\"#breed_data_table\").append(\"<tr><td>Sorry, no Image for that breed yet</td></tr>\");\n        } else {\n          // else display the breed image and data\n          displayBreed(data[0]);\n        }\n      });\n    }\n\n    // clear the image and table\n    function clearBreed() {\n      $('#breed_image').attr('src', \"\");\n      $(\"#breed_data_table tr\").remove();\n    }\n\n    // display the breed image and data\n    function displayBreed(image) {\n      $('#breed_image').attr('src', image.url);\n      $(\"#breed_data_table tr\").remove();\n      var breed_data = image.breeds[0];\n      $.each(breed_data, function (key, value) {\n        // as 'weight' and 'height' are objects that contain 'metric' and 'imperial' properties, just use the metric string\n        if (key === 'weight' || key === 'height') value = value.metric;\n        // add a row to the table\n        $(\"#breed_data_table\").append(\"<tr><td>\" + key + \"</td><td>\" + value + \"</td></tr>\");\n      });\n    }\n\n    // make an Ajax request\n    function ajax_get(url, callback) {\n      var xmlhttp = new XMLHttpRequest();\n      xmlhttp.onreadystatechange = function () {\n        if (xmlhttp.readyState === 4 && xmlhttp.status === 200) {\n          console.log('responseText:' + xmlhttp.responseText);\n          try {\n            var data = JSON.parse(xmlhttp.responseText);\n          } catch (err) {\n            console.log(err.message + \" in \" + xmlhttp.responseText);\n            return;\n          }\n          callback(data);\n        }\n      };\n      xmlhttp.open(\"GET\", url, true);\n      xmlhttp.send();\n    }\n\n    // call the getBreeds function which will load all the Dog breeds into the select control\n    getBreeds();\n  }, []); // The empty dependency array ensures that this effect runs once after the initial render\n\n  const handleBreedClick = breedName => {\n    setSelectedBreed(breeds.find(breed => breed.attributes.name === breedName));\n  };\n\n  // Continue with your existing code...\n}\n_s(Data, \"4L/fezPKcPIeCCmpBWKeiqslpqQ=\");\n_c = Data;\nvar _c;\n$RefreshReg$(_c, \"Data\");","map":{"version":3,"names":["React","useState","useEffect","Data","_s","breeds","setBreeds","selectedBreed","setSelectedBreed","loading","setLoading","$breed_select","$","change","id","children","attr","getDogByBreed","getBreeds","ajax_get","data","populateBreedsSelect","empty","append","output","each","key","value","name","breed_id","length","clearBreed","displayBreed","remove","image","url","breed_data","metric","callback","xmlhttp","XMLHttpRequest","onreadystatechange","readyState","status","console","log","responseText","JSON","parse","err","message","open","send","handleBreedClick","breedName","find","breed","attributes","_c","$RefreshReg$"],"sources":["/home/shekinah/Moringa/Phase-2/project-2/Phase-2-Project/src/components/Data.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './Data.css';\n\nfunction Data() {\n  const [breeds, setBreeds] = useState([]);\n  const [selectedBreed, setSelectedBreed] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    // Setup the Controls\n    var $breed_select = $('select.breed_select');\n    $breed_select.change(function() {\n      var id = $(this).children(\":selected\").attr(\"id\");\n      getDogByBreed(id);\n    });\n\n    // Load all the Breeds\n    function getBreeds() {\n      ajax_get('https://api.thedogapi.com/v1/breeds', function(data) {\n        populateBreedsSelect(data);\n      });\n    }\n\n    // Put the breeds in the Select control\n    function populateBreedsSelect(breeds) {\n      $breed_select.empty().append(function() {\n        var output = '';\n        $.each(breeds, function(key, value) {\n          output += '<option id=\"' + value.id + '\">' + value.name + '</option>';\n        });\n        return output;\n      });\n    }\n\n    // triggered when the breed select control changes\n    function getDogByBreed(breed_id) {\n      ajax_get('https://api.thedogapi.com/v1/images/search?include_breed=1&breed_id=' + breed_id, function(data) {\n        if (data.length === 0) {\n          // if there are no images returned\n          clearBreed();\n          $(\"#breed_data_table\").append(\"<tr><td>Sorry, no Image for that breed yet</td></tr>\");\n        } else {\n          // else display the breed image and data\n          displayBreed(data[0]);\n        }\n      });\n    }\n\n    // clear the image and table\n    function clearBreed() {\n      $('#breed_image').attr('src', \"\");\n      $(\"#breed_data_table tr\").remove();\n    }\n\n    // display the breed image and data\n    function displayBreed(image) {\n      $('#breed_image').attr('src', image.url);\n      $(\"#breed_data_table tr\").remove();\n\n      var breed_data = image.breeds[0];\n      $.each(breed_data, function(key, value) {\n        // as 'weight' and 'height' are objects that contain 'metric' and 'imperial' properties, just use the metric string\n        if (key === 'weight' || key === 'height') value = value.metric;\n        // add a row to the table\n        $(\"#breed_data_table\").append(\"<tr><td>\" + key + \"</td><td>\" + value + \"</td></tr>\");\n      });\n    }\n\n    // make an Ajax request\n    function ajax_get(url, callback) {\n      var xmlhttp = new XMLHttpRequest();\n      xmlhttp.onreadystatechange = function() {\n        if (xmlhttp.readyState === 4 && xmlhttp.status === 200) {\n          console.log('responseText:' + xmlhttp.responseText);\n          try {\n            var data = JSON.parse(xmlhttp.responseText);\n          } catch (err) {\n            console.log(err.message + \" in \" + xmlhttp.responseText);\n            return;\n          }\n          callback(data);\n        }\n      };\n\n      xmlhttp.open(\"GET\", url, true);\n      xmlhttp.send();\n    }\n\n    // call the getBreeds function which will load all the Dog breeds into the select control\n    getBreeds();\n\n  }, []); // The empty dependency array ensures that this effect runs once after the initial render\n\n  const handleBreedClick = (breedName) => {\n    setSelectedBreed(breeds.find((breed) => breed.attributes.name === breedName));\n  };\n\n  // Continue with your existing code...\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}